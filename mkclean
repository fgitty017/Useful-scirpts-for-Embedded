#!/bin/bash
# mkclean
# 
# Quick Description:
# 
# 
# Last Updated :
# Created      :
# 
# Author:
# Kaiwan N Billimoria
# kaiwan -at- kaiwantech -dot- com
# kaiwanTECH
# 
# License:
# MIT License.
# 
name=$(basename $0)
[ $# -ne 1 ] && {
  echo "Usage: ${name} path-to-codebase-to-clean"
  exit 1
}
[ ! -d $1 ] && {
  echo "${name}: path-to-codebase-to-clean \"$1\" invalid?"
  exit 1
}

PFX=$(dirname `which $0`)
source ${PFX}/common.sh || {
 echo "${name}: fatal: could not source ${PFX}/common.sh , aborting..."
 exit 1
}

########### Globals follow #########################
# Style: gNameOfGlobalVar


########### Functions follow #######################

Warn()
{
  echo "$@"
}

# $1 : -q => quiet mode
# $2 : dir
mkclean()
{
  local cmd="make clean"
  local dir=""

  if [ $# -gt 1 -a "$1" != "-q" ] ; then
    becho "[+] ${cmd}"
    dir=$2
  else
    dir=$1
  fi

  (
  cd ${dir}
  pwd
  eval "${cmd}" || Warn "*** $(pwd) : ${FUNCNAME[0]}(): cmd '${cmd}' failed"
  )
}

start()
{
gSRC=$1
wecho "$(date)"

IFS=$'\n'; set -f
for d in $(find ${gSRC} -type d \
 -not -path "*.git*" -not -path "*.tmp_versions" -not -path "*tools")
do
  #echo "In $d:"
  [ ! -f $d/Makefile ] && {
    aecho "[!] Skipping '$d', no Makefile..."
    continue
  }
  mkclean $d
  echo
done

unset IFS; set +f
}


##### 'main' : execution starts here #####

techo "<<<<<<<<<<<<<<<< ${name} : simple 'make clean' wrapper >>>>>>>>>>>>>>>>"
#tools_check
start $1
exit 0
